version: "3.9"

services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web/static
      - dev-media-data:/vol/web/media
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - DEBUG=1
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
      
  terraform:
    image: hashicorp/terraform:1.6
    volumes:
      - .:/terraform
    working_dir: /terraform
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - TF_WORKSPACE
      - TF_VAR_db_password
      - TF_VAR_django_secret_key
      - TF_VAR_ecr_proxy_image
      - TF_VAR_ecr_app_image

volumes:
  dev-db-data:
  dev-static-data:
  dev-media-data:
